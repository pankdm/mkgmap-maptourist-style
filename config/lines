# -------------------------------------------------------------------
# This is the default mkgmap style file for converting OSM ways
# into Garmin lines.
# Any line prefaced with # is a comment and will not be applied.
# Each line is a rule, of the generalised format:
#  OSM_tag(s)_to_match  [Garmin_type_code resolution]
# See http://wiki.openstreetmap.org/wiki/Mkgmap/help/style_rules
# and http://wiki.openstreetmap.org/wiki/Mkgmap/help/Custom_styles
# for more information.

# first set the country code
mkgmap:country!=* & mkgmap:admin_level2=* { set mkgmap:country='${mkgmap:admin_level2}' }
mkgmap:country!=* & addr:country=* { set mkgmap:country='${addr:country}' }
mkgmap:country!=* & is_in:country=* { set mkgmap:country='${is_in:country}' }

# country specific rules first

# Netherlands = NLD
mkgmap:country=NLD & mkgmap:region!=* & mkgmap:admin_level4=* { set mkgmap:region='${mkgmap:admin_level4}' }
mkgmap:country=NLD & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' } 
mkgmap:country=NLD & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' } 

# Germany = DEU cities
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level6=* { set mkgmap:city='${mkgmap:admin_level6}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' } 
mkgmap:country=DEU & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' } 


mkgmap:country=AUT & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=BEL & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=CZE & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=CZE & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' }
mkgmap:country=DNK & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=DNK & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' }
mkgmap:country=FIN & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=FIN & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=FRA & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=FRA & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=ISL & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=ITA & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=LUX & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=NOR & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=POL & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' }
mkgmap:country=POL & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=PRT & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=PRT & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=SVN & mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' }
mkgmap:country=ESP & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=SWE & mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' }
mkgmap:country=SWE & mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' }
mkgmap:country=CHE & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
# Russia
mkgmap:country=RUS & mkgmap:city!=* & (mkgmap:admin_level4='Санкт-Петербург' | mkgmap:admin_level4='Москва') { set mkgmap:city='${mkgmap:admin_level4}' }
mkgmap:country=RUS & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
mkgmap:country=RUS & mkgmap:city!=* & mkgmap:admin_level6=* { set mkgmap:city='${mkgmap:admin_level6}' }
# mkgmap:country=RUS & mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' }
 
# common rules for all the rest of countries
# mkgmap:region!=* & mkgmap:admin_level6=* { set mkgmap:region='${mkgmap:admin_level6}' } 
# mkgmap:region!=* & mkgmap:admin_level5=* { set mkgmap:region='${mkgmap:admin_level5}' } 
mkgmap:region!=* & mkgmap:admin_level4=* { set mkgmap:region='${mkgmap:admin_level4}, ${mkgmap:admin_level6}' } 
mkgmap:region!=* & mkgmap:admin_level3=* { set mkgmap:region='${mkgmap:admin_level3}' } 
mkgmap:region!=* & is_in:county=* { set mkgmap:region='${is_in:county}' } 

mkgmap:city!=* & mkgmap:admin_level8=* { set mkgmap:city='${mkgmap:admin_level8}' } 
mkgmap:city!=* & mkgmap:admin_level7=* { set mkgmap:city='${mkgmap:admin_level7}' } 
mkgmap:city!=* & mkgmap:admin_level9=* { set mkgmap:city='${mkgmap:admin_level9}' } 
mkgmap:city!=* & mkgmap:admin_level10=* { set mkgmap:city='${mkgmap:admin_level10}' } 
mkgmap:city!=* & is_in:city=* { set mkgmap:city='${is_in:city}' }
mkgmap:city!=* & addr:city=* { set mkgmap:city='${addr:city}' }
mkgmap:city!=* & (name=* & place=*) { set mkgmap:city='${name}' } # название НП в адрес

mkgmap:postal_code!=* & mkgmap:postcode=* { set mkgmap:postal_code='${mkgmap:postcode}' } 
mkgmap:postal_code!=* & addr:postcode=* { set mkgmap:postal_code='${addr:postcode}' } 

mkgmap:street!=* & addr:street=* { set mkgmap:street='${addr:street}' }
mkgmap:street!=* & addr:housename=* { set mkgmap:street='${addr:housename}' }

mkgmap:housenumber!=* & addr:housenumber=* { set mkgmap:housenumber='${addr:housenumber}' }

mkgmap:phone!=* & phone=* { set mkgmap:phone='${phone}' }
mkgmap:phone!=* & contact:phone=* { add mkgmap:phone='${contact:phone}' }

mkgmap:is_in!=* & is_in=* { set mkgmap:is_in='${is_in}' }

# сокращаем статусные части названий улиц
name=* { name '${name|subst:улица=> ул.
			|subst:переулок=> пер.
			|subst:проспект=> пр-т
			|subst:проезд=> пр-д
			|subst:разъезд=> раз.
			|subst:тракт=> тр-т
			|subst:площадь=> пл.
			|subst:имени=> им.
			|subst:бульвар=> бл-р
			|subst:шоссе=> ш.
			|subst:дорога=> дор.
			|subst:тупик=> туп.
			|subst:микрорайон=> мкр
			|subst:аллея=> алл.
			|subst:линия=> лин.
			|subst:набережная=> наб.
			}' }

# taxi type is used for river routing
highway=* {add taxi=no}

# убираем из обработки все планируемые дороги, ж/д, мосты и т.д.
highway=proposed | railway=proposed | bridge=proposed | proposed=* 
		{delete highway; delete rail; delete bridge}

# удаляем мост если bridge=no
bridge=no	{delete highway; delete rail; delete bridge}

# Flag unpaved roads.
highway=*
& (surface=cobblestone | surface=compacted | surface=dirt |
   surface=earth | surface=grass | surface=grass_paver |
   surface=gravel | surface=grit | surface=ground | surface=mud |
   surface=pebblestone | surface=sand | surface=unpaved |
   surface=concrete |
   mtb:scale=* |
   tracktype ~ 'grade[2-6]' |
   smoothness ~ '.*(bad|horrible|impassable)' |
   sac_scale ~ '.*(mountain|alpine)_hiking' |
   sport=via_ferrata)
{ add mkgmap:unpaved=1 }
(highway=bridleway | highway=path | highway=track | highway=unsurfaced)
& surface!=* & tracktype!=* & smoothness!=* & sac_scale!=*
{ add mkgmap:unpaved=1 }

# грейдер
highway=* & surface=compacted 
{ name '${ref} ${name}, (грейдер)' 
	| '${ref} (грейдер)' 
	| '${name} (грейдер)' | 'грейдер'  }
# гравийка
highway=* & surface=gravel
{ name '${ref} ${name}, (гравийка)' 
	| '${ref} (гравийка)' 
	| '${name} (гравийка)' | 'гравийка' }
# бетонка
highway=* & surface=concrete 
{ name '${ref} ${name}, (бетонка)' 
	| '${ref} (бетонка)' 
	| '${name} (бетонка)' | 'бетонка' }

highway=* & amenity=fuel | amenity=fuel & area=yes 
	{delete highway; set highway=rest_area; set area=yes}

# Set highway names to include the reference if there is one
highway=motorway 	{name '${name} (${ref)}' 
	| '${name} (${route_ref})' 
	| '${ref|highway-symbol:hbox}' 
	| '${name}'; add display_name = '${name} (${ref})' }
highway=trunk		{ name '${name} (${ref})' 
	| '${name} (${route_ref})' 
	| '${ref|highway-symbol:hbox}' 
	| '${name}'; add display_name = '${name} (${ref})' }
highway=primary		{ name '${name} (${ref})' 
	| '${name} (${route_ref})' 
	| '${ref|highway-symbol:box}' 
	| '${name}'; add display_name = '${name} (${ref})' }
highway=secondary 	{ name '${name} (${ref})' 
	| '${name} (${route_ref})' 
	| '${ref|highway-symbol:box}' 
	| '${name}'; add display_name = '${name} (${ref})' }
# highway=* 		{ name '${ref} ${name}' | '${ref}' | '${name}' }

# дополнительный тип односторонних дорог со стрелками
highway=* & oneway=yes [0x10f11 resolution 22 continue]

# Добавляем запреты проезда для машин
highway=* & motorcar=no | highway=* & vehicle=no | highway=* & motorcar=private | highway=* & motor_vehicle=no | highway=* & access=private {add motorcar=no; add taxi=no; add hgv=no}

# зимники и ледовые переправы
highway=* & winter_road=yes & ice_road!=yes | highway=* & ice_road=yes & winter_road!=yes [0x10 road_class=1 road_speed=3 resolution 18]

# пешеходные мосты
(bridge=yes | bridge=true) & (highway=pedestrian | highway=footway | highway=path)
	& area!=yes [0x10f18 resolution 24 continue]

# линии мостов дополнительно к дорогам
(bridge=yes | bridge=true) & highway!=pedestrian & highway!=footway & highway!=path
	& area!=yes [0x10f16 resolution 24 continue]
# & (railway!=subway | waterway!=* | area!=yes) Так почему-то не работает. К мостам добавляется контур.

# линии тоннелей дополнительно к дорогам
(tunnel=yes | tunnel=true) & railway!=subway & area!=yes 
	[0x10f1a resolution 24 continue]

# линии бродов тем же типом, что и track
highway=ford | highway=* & ford=yes [0x0a road_class=0 road_speed=0 resolution 21 default_name 'брод'] 


aeroway=runway [0x27 resolution 19]
aeroway=taxiway [0x27 resolution 24]

# Contours take their name from the elevation setting.
contour=elevation & contour_ext=elevation_minor
	{ name '${ele|conv:m=>ft}'; }
	[0x20 resolution 21]
contour=elevation & contour_ext=elevation_medium
	{ name '${ele|conv:m=>ft}'; }
	[0x21 resolution 19]
contour=elevation & contour_ext=elevation_major
	{ name '${ele|conv:m=>ft}'; }
	[0x22 resolution 19]
contour=elevation | contour_ext=elevation
	{ name '${ele|conv:m=>ft}'; }
	[0x21 resolution 19]
natural=cliff [0x10f17 resolution 21 continue]

# Convert generic path to most specific
highway=path & (bicycle=designated|bicycle=official) {set highway=cycleway }
highway=path & (horse=designated|horse=official) {set highway=bridleway }
highway=path & (foot=designated|foot=official) {set highway=footway }

# Roundabouts
junction=roundabout & highway=trunk {add display_name = '${name}'} [0x0c road_class=3 road_speed=2 resolution 18]
junction=roundabout & highway=primary {add display_name = '${name}'} [0x0c road_class=3 road_speed=2 resolution 19]
junction=roundabout & highway=secondary {add display_name = '${name}'} [0x0c road_class=2 road_speed=2 resolution 19]
junction=roundabout & highway=tertiary {add display_name = '${name}'} [0x0c road_class=1 road_speed=1 resolution 19]
junction=roundabout & highway=unclassified {add display_name = '${name}'} [0x0c road_class=1 road_speed=1 resolution 19]
junction=roundabout {add display_name = '${name}'} [0x0c road_class=0 road_speed=1 resolution 21]

# Ways that may or may not be useable

# Treat ways under construction as highway=path - canceled
highway=construction | highway=* & construction=* {add access = no; add bicycle = yes; add foot = yes; add mkgmap:dead-end-check = false } [0x0f road_class=0 road_speed=1 resolution 21 continue]
highway=construction | highway=* & construction=* [0x10f19 resolution 21 continue]
# Treat disused ways as highway=service, but at lower road_speed.
highway=* & disused=yes [0x0a road_class=0 road_speed=1 resolution 21 continue]

# Там где surface важнее класса
mkgmap:unpaved=1 & highway=primary
[0x12 road_class=1 road_speed=2 resolution 18]
mkgmap:unpaved=1 & highway=secondary
[0x12 road_class=1 road_speed=2 resolution 18]
mkgmap:unpaved=1 & highway=tertiary
[0x13 road_class=1 road_speed=2 resolution 19]
mkgmap:unpaved=1 & highway=unclassified
[0x13 road_class=1 road_speed=2 resolution 19]

# Ways sorted roughly by descending order of class
highway=motorway {add display_name = '${name}'; add oneway = yes; add bicycle = no; add foot = no } [0x01 road_class=4 road_speed=7 resolution 14]
highway=motorway_link {add oneway = yes; add bicycle = no; add foot = no } [0x09 road_class=3 road_speed=2 resolution 19]
highway=* & motorroad=yes {add display_name = '${name}'; add bicycle = no; add foot = no}  [0x02 road_class=4 road_speed=4 resolution 16]
highway=trunk {add display_name = '${name}'} [0x02 road_class=4 road_speed=5 resolution 16]
highway=trunk_link [0x09 road_class=3 road_speed=2 resolution 21]
highway=primary {add display_name = '${name}'} [0x03 road_class=3 road_speed=4 resolution 18]
highway=primary_link [0x08 road_class=3 road_speed=1 resolution 21]
highway=secondary {add display_name = '${name}'} [0x04 road_class=2 road_speed=3 resolution 18]
highway=secondary_link [0x08 road_class=2 road_speed=1 resolution 21]
highway=tertiary {add display_name = '${name}'} [0x11 road_class=1 road_speed=3 resolution 19]
highway=tertiary_link [0x08 road_class=1 road_speed=1 resolution 21]
highway=minor {add display_name = '${name}'} [0x06 road_class=1 road_speed=3 resolution 19]
highway=unclassified {add display_name = '${name}'} [0x06 road_class=0 road_speed=3 resolution 19]

highway=pedestrian & area!=yes {add access = no; add foot = yes} [0x16 road_class=0 road_speed=0 resolution 22]
highway=living_street & area!=yes [0x06 road_class=0 road_speed=1 resolution 22]
highway=residential & area!=yes {add display_name = '${name}'} [0x0d road_class=0 road_speed=2 resolution 22]
highway=bridleway {add access = no; add bicycle = yes; add foot = yes} [0x16 road_class=0 road_speed=0 resolution 22]
highway=byway [0x16 road_class=0 road_speed=0 resolution 22]
highway=service & oneway=yes {add display_name = '${name}'} [0x07 road_class=0 road_speed=1 resolution 22]
highway=service {add display_name = '${name}'} [0x07 road_class=0 road_speed=1 resolution 24]
highway=cycleway {add access = no; add bicycle = yes; add foot = yes} [0x16 road_class=0 road_speed=1 resolution 22]
highway=footway {add access = no; add foot = yes} [0x16 road_class=0 road_speed=0 resolution 22]
highway=path {add access = no; add bicycle = yes; add foot = yes} [0x16 road_class=0 road_speed=0 resolution 22]
highway=steps {add access = no; add foot = yes} [0x16 road_class=0 road_speed=0 resolution 22]
highway=track & tracktype!=grade1 {add display_name = '${name}'} [0x0a road_class=0 road_speed=1 resolution 21]
highway=track & tracktype=grade1 {add display_name = '${name}'} [0x07 road_class=1 road_speed=1 resolution 21]
highway=unsurfaced {add display_name = '${name}'} [0x0a road_class=0 road_speed=1 resolution 21]
highway=road {add display_name = '${name}'} [0x05 road_class=0 road_speed=1 resolution 21]
# highway=road {add mkgmap:dead-end-check = false} [0x00 road_class=0 road_speed=1 resolution 21]

# Mop up any unrecognised highway types
highway=* & area!=yes [0x07 ]

# natural=coastline [0x15 resolution 16 continue]

power=line {name '${name} ${ref}' | '${name}' | '${ref}' }
power=line | (power=line & man_made=cutline) [0x29 resolution 21]

# недейств. ж/д (добавил в конец railway=disused)
railway=abandoned | (railway=* & abandoned=yes) | railway=disused
{ name '${name} (недейств. ж/д)' | 'недейств. ж/д' }

# недейств. ужд
railway=narrow_gauge & disused=yes { name '${name} (недейств.)' | 'недейств.' }

# узкоколейка
railway=narrow_gauge { name '${name} (узкоколейка)' | 'узкоколейка' }

# Разделяем ЖД с трамваями и выносим их в кастомные типы
# railway=abandoned [0x0a road_class=0 road_speed=1 resolution 21]
railway=* & disused=yes [0x0b road_class=0 road_speed=0 resolution 21]
railway=abandoned | railway=disused [0x0b road_class=0 road_speed=0 resolution 21]
railway=light_rail & !(layer<0) [0x14 resolution 18]
railway=narrow_gauge [0x14 resolution 18]
# railway=rail [0x14 resolution 16]
# railway=tram & !(layer<0) [0x14 resolution 21]
railway=rail & service=*	[0x10f05 resolution 24]
railway=rail & service!=*	[0x10f13 resolution 16]
railway=tram	[0x10f14 resolution 21 continue]
railway=subway & !(layer<0) [0x14 resolution 18]
railway=platform {add access = no; add foot = yes} [0x16 road_class=0 road_speed=0 resolution 24]

route=ferry {add mkgmap:ferry=1} [0x1b road_class=3 road_speed=0 resolution 18]

waterway=canal [0x1f resolution 18 continue]
waterway=river [0x1f resolution 18 continue]
waterway=rapid | waterway=rapids | whitewater=rapid | whitewater=rapids
	{name '${whitewater:section_name}, пор. ${whitewater:section_grade}' | '${whitewater:section_name}, пор. ${whitewater:rapid_grade}' |
	'${whitewater:rapid_name}, пор. ${whitewater:section_grade}' | '${whitewater:rapid_name}, пор. ${whitewater:rapid_grade}'} [0x1001f resolution 18 continue]

waterway=drain [0x18 resolution 19 continue]
waterway=stream [0x18 resolution 21 continue]

man_made=pipeline {name '${name}' | '${operator}'} [0x28 resolution 18]
# Просеки
man_made=cutline & power!=line [0x0e road_class=0 road_speed=0 resolution 20]

# The following boundary styles are after the highway rules because ways
# are frequently tagged with both and we want the highway to take priority.
# Границы с названиями регионов берутся из отношения, 
# а города из имени границы (полигона) с тегом name=*
boundary=administrative & place!=* { name '${mkgmap:boundary_name}' }
boundary=administrative & admin_level<3 [0x1e resolution 16 continue]
boundary=administrative & admin_level<5 [0x1d resolution 16 continue]
boundary=administrative & admin_level<7 [0x1c resolution 19 continue]
boundary=administrative & admin_level<9 [0x1c resolution 21 continue]

# boundary=administrative [0x1c resolution 19 continue]
boundary=national [0x1e resolution 16 continue]
boundary=political [0x1c resolution 16 continue]

#
# Добавляем другие линии
#

# Заборы, стены
barrier=fence	|
barrier=hedge	|
barrier=wall	[0x10f12 resolution 24 continue]

# Канатная дорога
aerialway=cable_car  {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f00 resolution 22]
aerialway=gondola    {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f01 resolution 22]
aerialway=mixed_lift {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f02 resolution 22]
aerialway=chair_lift {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f03 resolution 22]
aerialway=drag_lift  {name '${name} (${ref})' | '${name}' | '${ref}' } [0x10f04 resolution 22]
aerialway=*	[0x10f15 resolution 22]


# роутинг по рекам - невидимая линия на 0-м слое
waterway=canal |
waterway=river |
waterway=rapid | waterway=rapids | whitewater=rapid | whitewater=rapids |
waterway=drain |
waterway=stream {add access=no; add taxi=yes} [0x0f road_class=0 road_speed=0 resolution 24]

# Горнолыжные трассы
piste:type=downhill & piste:difficulty=novice [0x10105 resolution 22]
piste:type=downhill & piste:difficulty=easy   [0x10102 resolution 22]
piste:type=downhill & piste:difficulty=intermediate [0x10103 resolution 22]
piste:type=downhill & piste:difficulty=advanced [0x10104 resolution 22]